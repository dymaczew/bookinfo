apiVersion: v1
kind: Service
metadata:
  name: reviews
  annotations:
    mcm.ibm.com/service-discovery: "{}"
  labels:
    app.kubernetes.io/name: reviews
    app.kubernetes.io/instance: bookinfo-demo
spec:
  ports:
    - port: 9080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: reviews
    app.kubernetes.io/instance: bookinfo-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookinfo-demo-reviews
  labels:
    runtime: liberty
    app.kubernetes.io/name: reviews
    app.kubernetes.io/instance: bookinfo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reviews
      app.kubernetes.io/instance: bookinfo-demo
  template:
    metadata:
      labels:
        runtime: liberty
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      containers:
        - env:
          - name: OPENTRACING_ENABLED
            value: "true"
          - name: JAEGER_SAMPLER_TYPE
            value: "probabilistic"
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: LATENCY_SAMPLER_PARAM
            value: "1"
          name: reviews
          image: "docker.io/dymaczew/examples-bookinfo-reviews-v3:2020.2.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
          failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
          failureThreshold: 10
          resources:
            {}
      securityContext:

